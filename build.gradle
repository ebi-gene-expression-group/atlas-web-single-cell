/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'war'
    id 'jacoco'
}

war {
    archiveName 'gxa#sc.war'
}

group 'uk.ac.ebi.ge'
version '11.0.0'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    jcenter()
    // For patched version of SolrJ (see dependencies below)
    mavenLocal()
    maven {
        url "http://bar.ebi.ac.uk:8081/artifactory/repo/"
    }
}

def cache2kVersion = '1.2.4.Final'
dependencies {
    implementation 'uk.ac.ebi.ge:atlas-web-core:6.0.0-SNAPSHOT'

    implementation 'org.springframework:spring-context:5.1.5.RELEASE'
    implementation 'org.springframework:spring-jdbc:5.1.5.RELEASE'
    implementation 'org.springframework:spring-web:5.1.5.RELEASE'
    implementation 'org.springframework:spring-webmvc:5.1.5.RELEASE'

    implementation 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.2.200'
    implementation 'org.jetbrains:annotations:17.0.0'

    implementation 'com.google.guava:guava:27.1-jre'

    // Use 'api' rather than 'compile' for Android or java-library projects.
    implementation 'com.google.auto.value:auto-value-annotations:1.6.2'
    annotationProcessor 'com.google.auto.value:auto-value:1.6.2'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.jayway.jsonpath:json-path:2.4.0'

    implementation enforcedPlatform('com.fasterxml.jackson:jackson-bom:2.10.0')
    // jackson-databind is required by RestTemplate ¯\_(ツ)_/¯
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-guava'


    implementation 'javax.inject:javax.inject:1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    // Needs to match Tomcat version https://tomcat.apache.org/whichversion.html
    implementation 'javax.servlet:javax.servlet-api:3.1.0'
    implementation 'javax.validation:validation-api:2.0.1.Final'

    implementation "org.cache2k:cache2k-api:${cache2kVersion}"
    runtimeOnly "org.cache2k:cache2k-core:${cache2kVersion}"
    implementation "org.cache2k:cache2k-spring:${cache2kVersion}"

    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'org.apache.commons:commons-text:1.6'
    implementation 'org.apache.commons:commons-math:2.2'

    implementation 'au.com.bytecode:opencsv:2.4'

    implementation 'io.atlassian.util.concurrent:atlassian-util-concurrent:4.0.1'

    // Nasty bug in HttpClient 4.5.3 (bundled with Solr)
    // https://issues.apache.org/jira/browse/HTTPCLIENT-1831
    implementation 'org.apache.httpcomponents:httpclient:4.5.8'
    // We’re using a patched version of SolrJ in which QueryRequest uses POST instead of GET to avoid erros due to very
    // long (i.e. unparseable) URIs. You need to install this on your local Maven repository: see mavenLocal() above
    implementation ('org.apache.solr:solr-core:7.1.0-QUERY_REQUEST_WITH_POST') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    // solr-core includes/depends on SolrJ
    // implementation 'org.apache.solr:solr-solrj:7.1.0

    implementation 'org.postgresql:postgresql:42.2.5.jre7'
    implementation 'org.apache.tiles:tiles-extras:3.0.8'
    implementation 'javax.servlet.jsp:jsp-api:2.2'
    implementation 'commons-jxpath:commons-jxpath:1.3'
    // For URL rewrite (see WEB-INF/web.xml), or your Filter will fail with the most confusing error messages
    implementation 'org.tuckey:urlrewritefilter:4.0.3'
    implementation 'jstl:jstl:1.2'
    // http://commons.apache.org/proper/commons-configuration/dependencies.html
    implementation 'commons-beanutils:commons-beanutils:1.9.3'
    implementation 'com.zaxxer:HikariCP:3.3.1'
    // https://mvnrepository.com/artifact/org.flywaydb/flyway-core
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '7.2.0'

    testImplementation 'org.springframework:spring-test:5.1.5.RELEASE'
    testImplementation 'com.h2database:h2:1.4.199'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.1'
    testImplementation 'org.mockito:mockito-core:2.25.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.25.1'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    testImplementation 'commons-beanutils:commons-beanutils:1.9.3'

    def junitJupiterVersion = '5.6.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"

    implementation platform('org.testcontainers:testcontainers-bom:1.15.3') //import bom
//    testImplementation "org.testcontainers:testcontainers:1.15.3"
//    testImplementation "org.testcontainers:junit-jupiter:1.15.3"
    testImplementation "org.testcontainers:postgresql"

//    testCompile 'org.junit.jupiter:junit-jupiter-api:5.4.1'
//    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.1'
//    testCompile 'junit:junit:4.12'
//    testRuntime 'org.junit.vintage:junit-vintage-engine:5.4.1'
//
//    testImplementation "org.testcontainers:testcontainers:1.15.3"
//    testImplementation "org.testcontainers:junit-jupiter:1.15.3"

}

test {
    if (project.hasProperty('testResultsPath')) {
        reporting.baseDir = "$buildDir/reports/" + project.property('testResultsPath')
        testResultsDirName = "test-results/" + project.property('testResultsPath')
    }
  
    if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests')
    }

    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
    useJUnitPlatform()
    maxHeapSize = '4096m'
}

if (!hasProperty('buildProfile')) ext.buildProfile = 'dev'
apply from: "build-profiles/profile-${buildProfile}.gradle"

processResources {
    exclude(['dev', 'prod'])
    from("src/main/resources/${buildEnvironment}")

    filesMatching(['*.properties', '*.xml']) {
        expand(
                projectBuildDirectory: buildDir,
                dataFilesLocation: dataFilesLocation,
                jdbcUrl: jdbcUrl,
                jdbcUsername: jdbcUsername,
                jdbcPassword: jdbcPassword,
                zkHost: zkHost,
                zkPort: zkPort,
                solrHost: solrHost,
                solrPort: solrPort,
                // Set at compile time with ./gradlew -PbuildNumber={...} ...
                buildNumber: buildNumber,
                buildBranch: buildBranch,
                buildRevision: buildRevision,
                // Set at runtime by Tomcat
                catalinaBase: '${catalina.base}',
                tomcatHostname: '${tomcat.hostname}'
        )
    }
}

processTestResources {
    filesMatching(['*.properties', '*.xml']) {
        expand(
                projectBuildDirectory: buildDir,
                testLogs: testLogs
        )
    }
}
